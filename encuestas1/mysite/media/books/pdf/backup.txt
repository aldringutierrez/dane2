setting.py

"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 2.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '1%fv=&m3n=3#vflu-xzv$87(ch(ek-++7a8%)w@*qoumpw8k3%'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'mysite.core',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
        os.path.join(BASE_DIR, 'mysite/templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

LOGIN_REDIRECT_URL = 'home'

LOGOUT_REDIRECT_URL = 'home'
============================================================
urls.py

from django.contrib import admin
from django.urls import path,include
from mysite.core import views

urlpatterns = [
	path('',views.home,name='home'),
    path('admin/',admin.site.urls),
	path('signup/',views.signup,name='signup'),
	path('accounts/', include('django.contrib.auth.urls')),
]

==============================================================
views.py

from django.shortcuts import render, redirect
from django.contrib.auth.models import User
from django.contrib.auth.forms import UserCreationForm

# Create your views here.
def home(request):
	count = User.objects.count()
	return render(request,'home.html',{
		'count': count
	})

def signup(request):
	if request.method=='POST':
		form = UserCreationForm(request.POST)
		if form.is_valid():
			form.save()
			return redirect('home')
	else:
		form =UserCreationForm()
	return render(request,'registration/signup.html',{
		'form':form
	})
	=======================================================
	base.html
	
	<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<title>{% block title %}{% endblock %}</title>
</head>
<body>
	<h1>Mapping Project</h1>
	<hr>
	<a href="{% url 'home' %}">Home</a>
	{% if user.is_authenticated %}
		<a href="">Add New Project</a>
		<a href="{% url 'logout' %}">Logout</a>
		<span>You are logged in as {{user.username}}.</span>
	{% else %}
		<a href="{% url 'login' %}">Log In</a>
		<span>You are logged in as Visitor !</span>
		<!--<a href="{% url 'signup' %}">Signup</a>-->

	{% endif %}

	<hr>
	{% block content %}
	{% endblock %}
</body>
</html>
==========================================================
home.html

{% extends 'base.html' %}

{% block content %}
	<h2>Home Page</h2>
	<!--<p>Welcome to Mapping Project,{% if user.is_authenticated %} {{user.username}} {% else %} Visitor {% endif %}</p>-->
	<p>
		<!--<strong>Total User Registered : </strong> {{ count }}-->
	</p>
{% endblock %}
===================================================
login.html

{% extends 'base.html' %}

{% block content %}
<h2>Log In</h2>
<form method="post">
    {% csrf_token %}
    {{ form.as_p }}
    <button type="submit">Login</button>
</form>
{% endblock %}

===============================================
sign up.html

<!--{% extends 'base.html' %}-->

<!--{% block content %}-->
<!--<h2>Sign Up</h2>-->
<!--<form method="post">-->
    <!--{% csrf_token %}-->
    <!--{{ form.as_p }}-->
    <!--<button type="submit">Sign Up</button>-->
<!--</form>-->
<!--{% endblock %}-->
=============================================